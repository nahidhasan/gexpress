%!PS-Adobe-2.0 EPSF-1.2%%Title: Bar Element9.280+K.eps%%Creator: FreeHand 8.0%%CreationDate: 8á26á02 12:22 PM%%BoundingBox: 0 0 614 793%%FHPathName:David Maddox: Jobs:Client Elements/Templates:University Elements:Bar Element9.280+K.eps%ALDOriginalFile:David Maddox: Jobs:Client Elements/Templates:University Elements:Bar Element9.280+K.eps%ALDBoundingBox: -17819 -17712 14437 14544%%FHPageNum:0%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Black%%DocumentCustomColors: (PANTONE 280 CVC)%%CMYKCustomColor: 1 0.72 0 0.185 (PANTONE 280 CVC)%%EndComments%%BeginAGDEmbeddedDoc: version 1.0%:s8W,W5t==!^::f!!!"DV!!3-(<,$2\ErZ1?!!iQH0f_6P#?*?W%:!!!QU!!"W30ebRD1,q9O2'=V62`M?K/iYOA!&6;d2)YF7"TT-.@/p=LF@:%W<bZ,h6Y1.WAT@eO!!*3&$ns:k1bq'I3&39F1]dXg5m76"\H5]>@;KKV!"T&h3A(Oj6sq/'!&lnoaoO@[27rnj!!E929jn#M@omA^A8cZjBmNY\!<`B)!"/c.A7]glEbTK7Bl@kh!$2+?GTm+f!rr<l!([+j!nm](s5F":!WX)5!_!2\"XjKN-.fh&%:!!3-#MZMH3-rV)c8H`Q(!!*'"!rr<%"6VB>6NIAk?jI5B!#Yg!*WQ1%#WE)eEbTE5;Is><J,hG4"oqBuDZFeXD#duEC]FS<!!!O.ATW$.DJ)FQCh6@MD8??X$jQb;!"Jus4T]*nFT>5o"(_H4!-8-]!$D8b!&=O,!&FTc!!!97Ym4&:!<=E?5smC-!$t$A!!ma^A0=TTA7TV'3WLuTF\m)Y6Y1=[+EfLm1B9?D#B4Wm8Hr;th0S7\%:!.Zjc1GU[C0E<s9$q#/YFDl"#!`NTLAS!\3!!!?+'*'oj0Ja&T'Sla'!)!MM3ridk9)p(76U(it!-FtI3=0O&!!<3-2$Ku^"TSkZ%VYoh!8nDZ%6Y7V$!:eNE^k1h@mpV-!)rq6"^qC?1BqbR#"'1.!!R=ME+:1!/Ir@%+9DNJE(Uj\!X/Q2!#u%?;?-^ss.KJo!!GA&!![ZJ6i[2kTdjdX!!!99_sSJ,70!WXs)ga1*WZ6A=,_1'%:!!+eT!&lP2#Y0#OA7\5EB2j.qAHDi4!!7*.0fh'I'b-!#N%[dM2$%Ft(Oc?LLK002+ohlK!!"'086B4sDf/08@<>pbF9"gME+*BjE,oN%0E?!5D)?tlKDu[(!2(1(K-_ap"*JX#E+*WqCm0JW!!iQ.!!!!46uQRXD.RU,6ZmHlDf#IS<bZ,hErZ1B!!m7HCh@d--j"9t!WW<]!^Zm'!+>k;!,DQ7!rrT,.i9*<'bV,Z!<<6as"E@c%:!W`9QW5&B5#n-eb"98P[*&Rd"!!3-)F*)FF+E)$a"TeZ,Anc't!WW<&"oqC"TE&m1EWBr4#&H!t"#0cU!&+C+W^$Oa/j0@f!!!0[#R(2gNrUU/-ibUp!!">G,QK%h+TNVb*rm>^!XL1S1&scD!)W_%s8N-#!\j]U)[6>(S,`NpmMh=C!/1CQ!#n028-+DEK`JBX4UM3X"uQA^0fB"3-O0o72[;/q"u]Nf;ht?"#6P0T!!#e!0ZXX/%:K`FOAG6^Y=:BlLQ70#OVk6D-F,lmutk[a?B"onWn%Cf7;!&%P<(BAXrj&''S#llmc3rh;C!'qe558=AO'*0`d4?X?WLH..!3'@F.6OX5^,7FY\56#am%#"[M!<0!>$qL@c%#"[M!$_mQ.gHJJ3sRu3#=2Q!>q6-^"s;s#.V_T]K`FOAHO!(A9*^.N70!;p2%^/s!!#7b!($ZL!&jm6$312/%8LJY!O,(:Bk1dr:c5W]!!,@nI!_S4%:!WYUg7f[W7703HD'f-Ok!!!]5%0-b9'K@(:!!&*(4VSk]:'^h"*%V:J!<=)r!b;<3$QpEO!uM%=*('fk!usu9!!4-[!$/#H3s'eN",'ST!Z[%O%gk6#CC1&##7ge92#mU[9#!5D!&Fli0`V1R8H;9])ZTjL)?:WT(]Y?P('#(0#nm:O!#/EF!"_9o$onY%!!teR#;[G*3tMKW(%m)C#!i5(!!#eQ""teu"uuh,3?S<$!+c.TNKU<'%:,n^3""99tQ3tMBf5u[hu4$.!R7LBKq#sSCl2&HB)&HGW-!"KqM!"L8;$E+".!$XQ6)`Q%D"!IY=!!!bo!WW9M;AK!.!#AKd!!!cK!rs*$6Q):T!$i*u!!.TM!#@Bk!9RlV!'C5]bfljD2#p<K#QPW>FT>P]2$$?B!!!dVFTI-t!$YkfMuit\(6LCC!#@aa!!!'9YlFb*!(n$;!)ERr(;Tu,2AXeb"5EtY(5RQP$31k.!WW9;e<\9u%:nGiOj(F]>^4UqbukYu,<FAm:,Ce@DZ"&C0B3=Spf;rpkH&2=.b!!-%`'ib_D"Zl`S>u,#3B/<?a_/B<r!,_dI!+AhW7g:UH=9'rR!"]nK!*M;`!!n;Z!<<'#!!>G,2,B\BacZi4G`oiHK`H5q=#2*28-'"sK`K0iAH7Me0TY3q!JLM2!&t!["?6C8!/1CQ/I;tmiW!0i1_D;G!=&mR:dbG?!(?lH#"f+k!/1E,!-eMTqZaiW]BOhd%:E^0YZ!(?lI!Cd2_!/1E,!%eKh?!Rak,E)IO#m-J06::q]K`Et12[2kZ5QQQ=K`Ho0:_S?*A5E;\!&Xa9!EK=_!/1E,!%eKh?X3tI!!*%-s8N-#XW7Zp[Q$YXK`FOA2[2kZ8-">DK`H>u&,HOgZW]TpK`FOA2uuJO8-">DK`E\2&RerO?jpBB!<<'#!5/]Km,(26#_`79!&k*S#=&=Mre1?+!/LYo;b^'hK`Et13!!%_2unX42`=c`%:K`E\2&S$G(>mXj<!<<'#!3HP68;u"c"GHhE!&k,Ws%3Me!/1E,!/LXUM=OIDK`Et13!!%_2unX4K`DI[!!iQ81Jg@t7T;B::-3#03JodXN?ALY!(-`e0`V1R#;]?[,9po:2adZ8^.g[l$;"5!!$`]g!'(&[6NOlM0i.iM/N3rJ^/KGGBO)-/!_WUq!6l$<Mc:$SK`F;p2[ik!nGb0CK`Hf,GQA"&QH_YqK`FOA2uuJO8-">D12HKa%:K`JI[5@XpQ!!*'#0k+Yn@K9d9?3"41;\3+:!!<6%W:`:[T+7gm!)!e)!"M[&#@VmhE^aMQF@0t_DfPgX7oa+%<(1UdW,2S9#$V.D!*<G>!rrNcFELdlduJ?[#68]H!<<'#!(R0cGQ@ea&-)_!##B(9WnfHY!'^R+1Kt4e!"&]+5l^mD?P*8<mfR_7!7q*)DEe5G!!!0&!'t!Z40LrY_-dKJ@0B:3!'@\2Y\O5b!WY4o1B_tX"DBd0%:Gt.lB3?qN0!A4A!4\u-&2]mg$!rti;7mCQr4XP%H!!<4L!'A^2O9#>S"%=V2!!$^5!!$($!&52m2_/o1#uKGq4_\Ij!.Y%KJ,oX_!X:S!G7Q\>!*93$5%=[t2$RkY$?%p1!s!lQrr<$d"$OD+*sqI:!<>Ih5l^lb"98Z_F(&&QDDd/W!!!*$GN+6J!AORE!s(Oi6OK.^!<>+\:BX#bGuG%P')qrc!'M5"s*Y^c?O:'@!<=tXJ/)W,%:3rq-]6Pf_&!3Q>I!/:K,!.m0<IL#oY#67O$!!!)b4$*aEbYK,W0Efp,!<E0"K`GZa!WZ4XIRat/GD-$N!&bH>WW4s^!!.cRFT;FBW]1"[!/1FPIY@c#"&]pk",-_T!!*("<G2Ad!/1D+#mtPX!W`7:5Q:cb2PpJQ%2]'Fs8T+"9acXTK`D,R9c3s3cc:_>K`D)Q6NTR]K`Hf,)#sX\$5!7;l8Ju?"bcr>'1DmjZ2t#@W^7$m;h'o5%:!$h5L!3og@!!!"D(@!j[!<>Og9*4CYs8TW)!WZsp!(.^1J)ss.$;1J4!'L]]"_e06!f7.C-jB\OrrN0%0`e';7hc/2-ia2r1($eoK`GZa!WX>G!/1E,!!(@-6N^^/.]\7'70#:N"op1Y!C+S)!rr<P#!%c$!6=Oe"TeZ*!"$%WKFih;K`D)QBE3Q?"%O#Y!(n"+moh7D!'2Y4!/1CQ!*B4W!egW.!!!!#5ofq*K`Hf,s6fpfO@e`D%:1BLSqK`Hf,!!"tY!W[oSK`FmWl8fYm#tk@r$NE=Z!!!!i!!*(R!/1DA?NgH0rrN2_1PPsb!/1CQ!<58s!,Mj2.#e3-!.kN2!/1CQ!(-fS$&&A5!!!!i!;6Bn!/1E,!&dOV0`V:UNW>%=Mu\b9M@RB$M#`>7!(J.u!!"_6!*XY/BK0K&!(?oS!:BbO!&SgXF9"T,!!!E-!(-cQ!'pTN!'pUa""sZ\!+5a+703_p!(?lR!&,MqF%Mqk%:!),[O!'pTn!_35V!'pTcOQWZC#tk7a!!!!b"AK(j"$lne3:Ho.%LOoj!rr<$R/iTSQN3<OPlR$KP5paG(93JsO?Es[1>5@NBg1d'5&XjhASF2PDLfbk1n,(-&KVM04$#k8"onT&!,2TA!/%aMF&r?T!,4:m36X/\SHJn5!s#(u7fYgT`6^4=XEYohSikeu!&U&K!1ttHRK/BK'_mF`HoQFQ3oNa488SJ06JVVA6OBCc9#6]M\DPlA%:"p"]@!!*&u#67LZ#tPR,!b=N>3<HI-"9:.V!([.l!%e0N&c_o'*<6'?6KUT7"9:P&SH==<(*iol!!3-"7VQZY!bGeL47#P:1`$0e;fm%oDJ)*G!It.N@fQKB!!,e^Bk)5b;c<Ys";F*d!!!]s!).*JF8u>_?82H\!!*<>!!l:o@;SdQ!($Yd<db$5!]1&h!!+&>'O:c$+<:F_7S#pc@n:/>9OVICE^'X+5]^FF$"e!i"(hXVC&Eb9%:6UOC!F#(!$*\dn=:L\'M2$c#A+or`aU(dVd!'gN_F#=/6!!+;F,#`H!D50o-2E1kP2$![X.01JX@<>oX9E:H5D%$FpD?+#L9N-",$NVaY*_$]/AHE-Y@rc:&F?QNe5\t*[2[1f6*WQ@4Ch7HpDKGkD.SOo)![AjH!?<:8!A$\@<!4rg!A4C):ojX^F#Tip(B?)h/O'PX4UO4Q49@8=01U&$F`9T"!(d5L!A$]SB6A5MX%<@PiY!K*%:!B![j+CTA*0FIn+!!.-n6N^p#!BC0?"<^!NEc6/-!G6C?6T>36!?OpK499>20EFB>2%MA@5li#nCi<g!!!kgq"(l.]Cc_\b!?P'XDe!?h9EmW[!3SZi6:,+%Bk':9Cj?@UDui<0?NXnJ"D0A+3<DqV6<%B4ATD?mCB?b5M%Nl";?.@a"`R-h+=\Z`2$-\W;FqG8,a&0^!E9(t;fm;$AUskI,r,L$!<E0O7s/NVATKa;F)rW-9tEl`%:!G5hOK)n.P<WGHe9hQK,!!-4'*`QQW0EBJX0e#*`F#shA!!-)p.52#e.mcNl6q1CtD_i7W!@%XGTgU:p!'pTN!!!`7.5:g5K"*f@'EM_F.l@;4D#aSk!C6]O!!-"!EMukq0/+q;!@\%!@fSLj'JTS&2$5'(7&gB6!)tr[3&q$GK`D,t!?qP>RfH@f;&)&P0blhO1'(EW!)`h;3rieI%7<&W<*s2k!*25d<&4Pc!CJdH3'dO1(#1O>%:!'pTN!'pUY=#0n&CB4DL!?sZ.;`c:92ZZoA!'($h!3/jU$PY;r/m/<%;$1>0K`E>R!BC0@!<>AF!BC0@!BC0@4TI_J5QO+N!!Y[h5QO+N5QO+N5QO,+!J(=m#QOlk!?D4@<C(K>%:~>%%EndAGDEmbeddedDoc%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{ dup where not {AltsysSepDict } if  3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{ /cntr 0 def 2 copy readstring {{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop }if cntr 0 gt {pop 2 copydup length cntr sub cntr getintervalreadbinarystring } if pop exch pop} bdf/_NXLevel2 defed {  _NXLevel2 not {   /colorimage where {userdict eq {/_rci false def } if} if } if} if/md defed{  md type /dicttype eq {  /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if }if }if/setstrokeadjust defed{ true setstrokeadjust /C{curveto}bdf /L{lineto}bdf /m{moveto}bdf}{ /dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf /C{dr curveto}bdf /L{dr lineto}bdf /m{dr moveto}bdf /setstrokeadjust{pop}bdf }ifelse/privrectpath {  4 -2 roll m dtransform round exch round exch idtransform  2 copy 0 lt exch 0 lt xor {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto} {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto} ifelse closepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed { /_bfh {/_fonthacksave currentpacking def false setpacking} bdf /_efh {_fonthacksave setpacking} bdf}{ /_bfh {} bdf /_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` {  false setoverprint     /-save0- save def 5 index concat pop storerect left bottom width height rectclip pop  /MMdict_count countdictstack def /MMop_count count 1 sub def userdict begin  /showpage {} def  0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath } bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1  statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelse end def/printerRes  gsave matrix defaultmatrix setmatrix 72 72 dtransform abs exch abs max grestore def/graycalcs[ {Angle Frequency}    {GrayAngle GrayFrequency}  {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div}  {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps { forcemaxsteps {maxsteps } {/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelse printerRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if  } ifelse} bdf/nextrelease defed {  /languagelevel defed not {    /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if }if}iffhnumcolors 1 ne { /calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {   currentpagedevice /PreRenderingEnhance known {currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if } if} if/gradfrequency 144 defprinterRes 1000 lt { /gradfrequency 72 def} if/adjnumsteps {  dup dtransform abs exch abs max    printerRes div         gradfrequency mul       round         5 max        min        }bdf/goodsep { spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted?  0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{ systemdict /packedarray known  {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse { /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx } { /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx }ifelse}bdf/i{dup 0 eq {pop df dup}  {dup} ifelse  /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{  {/filler /eofill load def /clipper /eoclip load def} {/filler /fill load def /clipper /clip load def} ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{ /NF exch def  {    exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse }forall  NF}bdf/MN{ 1 index length    /Len exch def  dup length Len add   string dup     Len      4 -1 roll     putinterval    dup      0       4 -1 roll    putinterval   }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch {1 index MN cvn/NewN exch def cvn findfont dup maxlength dict CD dup/FontName NewN put dup /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RC} ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known {exch pop findfont 3 -1 roll pop} {pop dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll  {3 -1 roll dup 4 -2 roll put}forall put definefont} ifelse}bdf/RCJ{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFJ{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCJ}  ifelse}bdf/hasfont{ /resourcestatus where  {pop /Font resourcestatus{ pop pop true}{ false}ifelse } {dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse } ifelse}bdf/FDFJ{ dup    hasfont   not    {   pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse  } if}bdf/FFJ{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/GS { dup  hasfont  {FFJcurtextmtx makefont setfontexch5 1 rolltspop } {pop popts } ifelse} bdf/RCK{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFK{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCK}  ifelse}bdf/hasfont{ /resourcestatus where  {pop /Font resourcestatus{ pop pop true}{ false}ifelse } {dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse } ifelse}bdf/FDFK{ dup    hasfont   not    {   pop/JCsmhasfont {/JCsm}{/Courier}ifelse  } if}bdf/FFK{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/RCTC{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFTC{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCTC}  ifelse}bdf/FDFTC{ dup    hasfont   not    {   pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse  } if}bdf/FFTC{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/fps{ currentflat    exch      dup 0 le{pop 1}if  {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse }loop  pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont { /Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{ 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul add add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor {  max max max  } ndf/maxspot { pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{ 0 1 2 index length 1 sub { 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put }for 4 1 roll pop pop pop}bdf/colorimage{ pop pop [5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx ]cvx  image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{ aload pop (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image } ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{ aload pop  (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage } ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{ aload pop (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage } ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor {  spots exch get dup 4 get (_vc_Registration) eq {pop 1 exch sub setseparationgray} {0 5 getinterval exch setcustomcolor} ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdf  userdict /islevel2 systemdict /languagelevel known dup {pop systemdict /languagelevel get 2 ge } if put  islevel2 not {/currentcmykcolor{0 0 0 1 currentgray sub} ndf } if  /tc {gsavesetcmykcolor currentcmykcolorgrestore } bind def /testCMYKColorThrough {tc add add add 0 ne } bind def /fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput } { pop } ifelse/bc4 [0 0 0 0] def /_lfp4 { 1 pop  /yt xdf        /xt xdf        /ang xdf       storerect /taperfcn xdf /k2 xdf /y2 xdf /m2 xdf /c2 xdf /k1 xdf /y1 xdf /m1 xdf /c1 xdf c1 c2 sub abs m1 m2 sub abs y1 y2 sub abs k1 k2 sub abs maxcolor       calcgraysteps mul abs round   height abs adjnumsteps    dup 1 lt {pop 1} if     1 sub /numsteps1 xdf currentflat mark     currentflat clipflatness   /delta top bottom sub numsteps1 1 add div def  /right right left sub def   /botsv top delta sub def   {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/bcs [0 0] def /_lfs4 { /yt xdf        /xt xdf        /ang xdf       storerect /taperfcn xdf /tint2 xdf       /tint1 xdf       bcs exch 1 exch put     tint1 tint2 sub abs     bcs 1 get maxspot     calcgraysteps mul abs round   height abs adjnumsteps    dup 2 lt {pop 2} if     1 sub /numsteps1 xdf currentflat mark     currentflat clipflatness   /delta top bottom sub numsteps1 1 add div def  /right right left sub def   /botsv top delta sub def   {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/_rfs6 { /tint2 xdf       /tint1 xdf       bcs exch 1 exch put     /inrad xdf       /radius xdf       /yt xdf        /xt xdf        tint1 tint2 sub abs     bcs 1 get maxspot     calcgraysteps mul abs round   radius inrad sub abs    adjnumsteps       dup 1 lt {pop 1} if     1 sub /numsteps1 xdf radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse  2 div /halfstep xdf     currentflat mark     currentflat clipflatness   {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/_rfp6 { 1 pop  /k2 xdf /y2 xdf /m2 xdf /c2 xdf /k1 xdf /y1 xdf /m1 xdf /c1 xdf /inrad xdf       /radius xdf       /yt xdf        /xt xdf        c1 c2 sub abs m1 m2 sub abs y1 y2 sub abs k1 k2 sub abs maxcolor      calcgraysteps mul abs round  radius inrad sub abs   adjnumsteps      dup 1 lt {pop 1} if    1 sub /numsteps1 xdf radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse  2 div /halfstep xdf    currentflat mark    currentflat clipflatness  {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{ AltsysDict /cvc 2 index put  aload length dup 4 eq {pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse} {6 eq {sethexcolor} {setspotcolor} ifelse } ifelse}bdf 0 setseparationgray/imgr {-16128 -16128 16128 16128 } def /bleed 0 def /clpr {-16128 -16128 -144 -144 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def  userdict begin /AGDOrigMtx matrix currentmatrix def end vms-1691 -1584 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor1 0.72 0 0.185 (PANTONE 280 CVC) false newcmykcustomcolor]defn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1] vcvms1691.5704 2376.2443 m2304.1408 2376.2443 L2304.1408 1584.5891 L1691.5704 1584.5891 L1691.5704 2376.2443 L[1 4]  vcf n1691.5704 2376.5501 m2304.1408 2376.5501 L2304.1408 2304.5388 L1691.5704 2304.5388 L1691.5704 2376.5501 L[0 0 0 1]  vcf n1691.5704 2232.9253 m2304.1408 2232.9253 L2304.1408 2159.3254 L1691.5704 2159.3254 L1691.5704 2232.9253 Lf n1691.5704 2087.7118 m2304.1408 2087.7118 L2304.1408 2015.7006 L1691.5704 2015.7006 L1691.5704 2087.7118 Lf n1691.5704 1944.0869 m2304.1408 1944.0869 L2304.1408 1872.0757 L1691.5704 1872.0757 L1691.5704 1944.0869 Lf n1691.5704 1800.4622 m2304.1408 1800.4622 L2304.1408 1728.451 L1691.5704 1728.451 L1691.5704 1800.4622 Lf n1691.5704 1656.5732 m2304.1408 1656.5732 L2304.1408 1584.562 L1691.5704 1584.562 L1691.5704 1656.5732 Lf nvmrvmrend%%Trailer